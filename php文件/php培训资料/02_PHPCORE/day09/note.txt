一. 变量作用域(Scope)
 1.局部变量:只在代码段中有效
      (1) 动态变量
      (2) 静态变量:static,用在函数中，调用函数时
                                    不释放内存，能存储变量的最后值，
                                    一般函数中的实现累加计数
 2.全局变量：任意范围内都有效,但必须在函数中声明全局变量
      global
      $GLOBALS
 3.超全局变量:任意范围内都有效,并且不用在函数中声明全局变量
       说明: 所有的预定义变量都是超全局变量
二.预定义变量
   1. $_POST：表单传输方式'post',以名/值对接受数据
   2. $_GET：表单传输方式'get',以名/值对接受数据
   3. $GLOBALS：声明全局变量
   4. $_FILES:上传接受的数据信息
   5. $_COOKIE：会话机制   跨页面传输数据的
   6. $_SESSION：会话机制 跨页面传输数据的
   7. $_REQUEST：等同与  $_POST,$_GET,$_COOKIE接受数据
   8. $_SERVER:服务器信息(ip,主机名，根相对路径等...)
   9. $_ENV：环境变量
   说明:
    a.所有的预定义变量都是超全局变量
    b.所有的预定义变量都是以数组形式存储
            例如 :  $user = $_POST['user'] 数组中的某一个值
            print_r($_POST) 所有表单元素所组成数组
    
三.常量
  1.什么是常量:程序中不可以改变的量,常量一旦定义不能修改
                           也就是只能声明一次
  2.分类
    2.1自定义常量
      (1)定义常量
         a.  define('常量名称','值');
         b.  const 常量名称='值';(面向对象中声明常量)
      (2)输出常量
         a. echo 常量名称;
         b. echo constant('常量名称');
      (3) 常量名称规定
         a. 常量名称尽量大写字母
         b. 常量名称没有 $
         c. 常量值都是标量类型(整型,浮点,字符型,布尔型)
         d. 常量是超全局变量，但除了const定义的常量外
    2.2系统常量
         a. PHP_INT_MAX 获得整数最大值
         b. PHP_OS 服务器操作系统
         c. PHP_VERSION :PHP版本
    2.3魔术常量    
      __LINE__:获得当前文件的行号
      __FILE__:获得当前文件所在绝对路径
      __DIR__: 获得当前文件所在目录的绝对路径
      __FUNCTION__:获得当前的函数名称
      __CLASS__:获得当前的类名称
      __METHOD__:获得当前的方法名称
      __NAMESPACE__:获得命名空间的名称
                   命名空间:解决函数或类名称冲突的问题
四.上传(Upload)
  1.表单中具有浏览框的条件
    a.传输方式 'post'
    b.form 标记中添加  enctype="multipart/form-data"
  
  2. 接受上传信息 $_FILES
     (1)上传文件名称 
      $_FILES['浏览框名']['name']
     (2)上传文件类型 
      $_FILES['浏览框名']['type']
     (3)上传文件在服务器上的临时目录及文件位置 
      $_FILES['浏览框名']['tmp_name']
     (4)上传文件报错信息 
      $_FILES['浏览框名']['error'] 0代码成功
     (5)上传文件大小 
      $_FILES['浏览框名']['size']
             说明:
         a. 单位字节(Byte), 1B =2^8 =8bit
         b. 
           1024B = 1KB
           1024KB = 1MB
           1024MB = 1GB
           1024GB = 1TB
  3 上传函数:将上传文件的临时位置移动到目标位置
     move_uploaded_file($tmpName,$filename)
         
  4上传文件报错信息
    a.UPLOAD_ERR_OK 
            其值为 0，没有错误发生，文件上传成功。
    b.UPLOAD_ERR_INI_SIZE 
            其值为 1，上传的文件超过了 php.ini 中
      upload_max_filesize 选项限制的值,默认值2M。
    c.UPLOAD_ERR_FORM_SIZE 
            其值为 2，上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。
    d.UPLOAD_ERR_PARTIAL 
            其值为 3，文件只有部分被上传。
    e.UPLOAD_ERR_NO_FILE 
            其值为 4，没有文件被上传。
    f.UPLOAD_ERR_NO_TMP_DIR 
            其值为 6，找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进。
            说明:php.ini  upload_tmp_dir =临时文件位置
    g.UPLOAD_ERR_CANT_WRITE 
            其值为 7，文件写入失败。PHP 5.1.0 引进。 

   5. 包含文件函数
     (1) include:当加载文件失败时，报警告(Warning)错误但后面
                                    代码会继续执行
     (2) require:当加载文件失败时，报致命(Fatal)错误并且后面
                                     代码停止执行
     (3) include_once:相同文件只加载一次
     (4) require_once:相同文件只加载一次
   
   6.多文件上传
      (1)表单元素名称以数组形式命名:
                  上传数据三维数组，所以要转为索引+关联的
                  二维数组
      (2)表单元素名称单独命名：上传数据关联+关联
                 的二维数组,所以转为索引+关联的二维数组,
                 和单文件上传的数据区别，单独命名多文件上传
                 是多个成员值(多个文件)
   
   7.上传步骤
     (1) 表单中具有浏览的条件
        a.传输方式 'post'
        b.form 标记中添加  enctype="multipart/form-data"  
     (2)封装代码
       a.单文件和多文件(以数组命名和单独命名)
                   上传的信息转为索引+关联的新二维数组
       b.循环遍历新二维数组，获得每个文件信息
       c.判断每个文件报错等于 0
       d.为了避免文件冲突，对每个文件重命名
       e.对每个文件实现上传
       f.返回重命名后的文件名称的数组
     (3)要求
        a.限制文件大小  php.ini  upload_max_filesize=2M
      * b.限制文件类型(jpg,gif,png)
        c.为了避免文件冲突，对每个文件重命名
        d.判断上传的文件是否是图像 getimagesize
        e.判断上传传输类型是否是post  is_uploaded_file函数
      * f.判断是否存在文件夹，如果不存在创建文件夹
     
       
       
        
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
         
     

    

     

    
  
  
  
  
  
  
  
  













      
      
      
      
    
    
    
    
    
    







