一.类型判别函数库
  1.安装: 类型判别函数库是PHP组成部分,不用安装
  2.
   a. is_int |is_integer|is_long
              检测变量是否是整数  
              格式:bool is_int(string $var)
   b. is_float |is_double|is_real
              检测变量是否是浮点 
   c. is_bool
              检测变量是否是布尔 
   d. is_string
             检测变量是否是字符           
   e. is_array 检测变量是否是数组
   f. is_object 检测变量是否是对象
   g. is_resource 检测变量是否是资源
   h. is_null 检测变量是否是null
   i. is_numeric 检测变量是否数值(整数,浮点,合法的数字字符串)
   j. is_scalar 检测变量是否是标量(整型,浮点型,布尔,字符型)
   
二.运算符(Operator)
  1.运算符：程序执行的运算符号，必须有一个以上操作数
                     参加运算 (例如: $a + $b)
                     表达式:由操作数和运算符组成
  2.运算符分类
    (1)按功能分
    (2)操作数的个数分
  3.按功能分
   (1)算术运算符: (-)减号  (+)加号  + - * / %(求余数) 
                
           说明:
        a. 算术运算符结果都是数值类型
        b. 运算前操作数要转为数值类型
        c. %(求余数)
           (a)求余数,求的是整数余数,操作数向下取整
           (b)求余数符号与被除数一致
           (c)求浮点数余数 fmod函数
   (2) ++(自增,递增) --(自减,递减)运算符
     a.原理: ++$var --$var  $var++ $var--
                     前缀形式: 变量自身先加1或减1,后执行语句
                     后缀形式: 先执行语句,变量自身后加1或减1
     b. 数据类型支持
       (a) 数值类型支持自增和自减
       (b) 布尔类型不支持自增和自减
       (c) null支持自增不支持自减
       (d) 字符类型(纯字母)支持自增不支持自减

   (3)字符(连接)运算符: .
              说明: 字符(连接)运算符结果字符类型
   (4)赋值运算符: = , += -= *= /= %= .=
             说明:赋值运算符结果与运算符号有关系。
   (5)比较运算符: > >= < <= ==(等于) != <>(不等于)
                ===全等于 !==不全等于
             说明:
         a.比较运算符结果布尔类型
         b.  ===全等于 :值和类型都相等才为真，否则为假
         c.  !==不全等于:值和类型都相等才为假,否则为真   
         d.比较运算类型转换
           (a)字符串或null 跟字符串的比较,null转为
                          空字符串;数值之间或字母之间按数值和字母按
                          位比较;数值跟字母比较按位的ASCII值比较
           (b)布尔类型或null 跟其他类型比较,按布尔值比较
              null 布尔值false, true > false             
               
           (c)数值或字符串跟数值比较,转为数值类型比较
         e. ===全等于 和  !==不全等于的使用
                     原理:PHP是弱类型语言,变量会根据程序运行环境
                             自动换行，例如 0,0.0,'0'自动转为布尔值
              false,为了避免自动转换产出的错误，需要
                              用===全等于 和  !==不全等于解决
              (将0和false区分开,严格比较)
       
   (6)逻辑运算符：!(非), && and(与,并且)
               , || or(或者),xor 异或
      
        说明:
       a.逻辑运算符结果布尔类型
       b.&& and(与,并且,&&优先级高):第一个表达式和
                 第二个表达式都为真才为真,否则为假
       c. || or(或者)：第一个表达式和
                 第二个表达式都为假才为假,否则为真
       d.xor 异或 ：第一个表达式和第二个
                         表达式布尔值不同为真,相同为假
       e. 短路问题:第一个表达式的结果就能确定整
                     个表达式结果，那第二个表达式忽略不执行
         && and(与,并且)产生短路：
                     当第一个表达式为假产生短路，那第二个表达式忽略不执行 
         || or(或者)产生短路：
                     当第一个表达式为真产生短路，那第二个表达式忽略不执行 
   
   (7)错误抑制符
   (8)执行运算符
     
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    
  
  
  
  
  
  
  
  












            
             
             
             
             
             
             
             
             
     



