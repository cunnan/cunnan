JavaScript
一、概述
        运行在客户端的解释型脚本语言。
       
        解释型脚本语言
        程序在每次运行时被编译成机器语言，再执行。
        例如：JavaScript、PHP-OPCODE

        编译型脚本语言
        在程序完成后编译一次，每次运算时不用再次编译。
        例如：Java、C


        用途：
        - 给网页添加动态化效果
        - 获取HTML/XML文档中的内容。
        - 表单验证
        - 响应网页事件
        - 获取客户端浏览器信息 等。

二、JavaScript 语法 
       1、JavaScript 的调试工具
            IE: httpwatch （需要安装）
            FIREFOX  firebug （需要安装）
            安装： 打开菜单-> 附加组件 ->扩展->搜索firebug->找到以后点击安装。 
            使用：F12
          
            CHROME 自带调试工具 
            使用：F12

         2、JavaScript文件的名称
               建议采用英文小写字母，数字，下划线来命名文件。
               JavaScript文件以.js为扩展名称。

        3、要求所有的命令行都以 ;结尾，换行可以代替分号。

        4、JavaScript  严格区分大小写。
     
        5、JavaScript  的注释
             //
           
            /* 被注释掉的内容 */

        6、JavaScript  与 HTML  
                alert(string str)
                功能：弹出一个对话框
                参数：
                str     对话框上体现的文本内容

                document.write(string str)  

                功能：在浏览器上输出一段文本
                参数：
                str    浏览器上输出一段文本内容


              - 以独立文件形式写入到HTML中
                 <script type="text/javascipt" src="JavaScript文件的地址"></script>

              - 以代码段的形式引入到HTML文档中
                 <script>
                        alert("hello");
                 </script> 

           7、JavaScript中的变量
                变量是定义在内存中，在程序运行过程当中负责存储和传递数据。
                声明变量：
               var   变量的名称;
               变量名称要求数字、字母、下划线。变量名称也可以以$作为变量的起始。建议直接使用小写字母。
                var   变量的名称,变量的名称;
                var   变量的名称 =  值；

                JavaScript的变量也是弱类型的。  

                JavaScript的变量作用域。

           8、变量分类  
                 typeof(变量分类)
                 功能：返回变量的数据类型
                 
                 三大类 八种变量类型
                 一、传统类型
                         - string 
                            var str = "";
                         - number
                            var n=10;
                            var n=10.1;
                         - boolean
                            var b = true;
                 二、复合类型
                        - Object 对象类型
                           var  obj = new Object();
                           var  obj = {"属性名称":"属性值"[,"属性名称":"属性值"...]}   
                        - Array 数组类型
                           var  arr = new Array();
                           var  arr = [1,2,"hello"];
          
                        - Function 函数数据类型   
                           var f = new Function();

                 三、特殊类型
                        undefined 
                        var  变量名称；
                         当定义变量没有赋初值时，变量被认为是underfined 数据类型。
                       null

               9、运算
                      - 按照功能来划分
                          数学运算
                          +、-、 *、 /、 %、 +(正)、  -（负）、 ++、--
                          
                           字符运算
                           +

                          逻辑运算
                          &&、 ||、 ！ and、 or

                          比较运算
                           >、<、 ==、=== 、!=、！==、>=、<=

                          赋值运算
                          =、+=、-=、*=、/=、%=

                     - 按照参加运算数目划分
                        单目运算
                         +(正)、  -（负）、 ++、--、！
                        双目运算
                        三目运算
                        exp1?exp2:exp3
                        判断表达式1是否为真，为真取表达式2，否则取表达式
3.

               10、分支语句
                       if(条件表达式){
                                  执行语句；
                       }
                       if(条件表达式){
		执行语句；
                       }else{
                                 执行语句；
                       }
 
                      if(条件表达式){
                               执行语句；                    
                      }else if(条件表达式){
                               执行语句；                    
                      }

                     switch(条件表达式){
                             case 条件1：
                                      执行语句；
                                      break;
                             case 条件2：
                                      执行语句；
                                      break;
                            default:
                                       执行语句；  
                     }


               11、循环语句
                       for(表达式1;表达式2;表达式3){
                                 循环体
                       }
                       
                       while(条件表达式){
                                  循环体
                       }

                       do{
                              循环体
                       }while(条件表达式)


三、JavaScript应用
			instanceof
       1、字符串对象
              var  str = “hello”//string
              var  str = new String("hello"); //object
            对象有自己的属性和方法。
            对象对于属性和方法的访问 "."
            例如：对象.属性
                      对象.方法([参数])

            属性：length 获取字符串的长度

            方法：
            对象.indexOf("子字符串")  
            功能：获取子字符串在字符串对象中首次出现的位置
            参数：
            获取位置的子字符串
            返回：number类型数据 位置。当查询不到时返回 -1.

            对象.toUpperCase();
            功能：将字符串转换为大写
            返回：转换后的字符串
   
            对象.toLowerCase();
             功能：将字符串转换为小写
            返回：转换后的字符串

            对象.substr(start[,length])
            功能：字符串的截取
            参数：
            start  截取的开始
            length  截取的长度，此参数不给 默认截取到字符串的末尾。
            返回：截取后的字符串

            对象.slice(start[,end])
            功能：字符串的截取
            参数：
            start 截取的开始
            end  截取的终止
            返回：截取后的字符串











习题：
1、应用switch分支语句，给日期 0~6，其中0 代表周日，1代表周一 以此类推。若给不同的数值，输出对应的星期值。
2、用while输出9x9的乘法表
3、判断tom@qq.com中是否含有字符串 @，若有则输出 yes，否则输出no。
4、完成字符串的截取。
       tom@qq.com，应用字符串的截取，获取字符@所在位置，根据@所在位置，截取字符串中的 tom 和  qq.com



                       

           
  

                             
                        













       

      












