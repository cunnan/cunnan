OOP
三、面向对象的三大特征
       封装、继承、多态
       继承
       定义一个新类，继承先前定义的类的成员属性和成员方法。并在新定义的类中写入新的成员属性和成员方法。从而达到类之间的层级关系。
       
      先前定义的类：父类 超类
      新定义的类：子类
    
      PHP中的继承是单继承的。一个子类只能有一个父类。一个父类可以有多个子类。

      PHP继承的语法：
      class 子类名称 extends 父类{
 	//成员方法和成员属性
      }

     在子类中定义父类中的成员方法。成为重xie
     
     在子类中访问父类中被重xie了的成员方法应用关键词
     parent

四、与面向对象相关的关键词和魔术方法
       1、instanceof
             判断一个类对象是否属于这个类。     

       2、const
             定义常量。在类中定义常量，也可以在类外定义常量。
              const 常量名称=常量值
             - 常量一经定义不能改变。
             - 常量名称尽量大写。

             常量的访问
             - 在类外对常量的访问：
                类名称::常量名称
             - 在类里面对常量的访问：
                self::常量名称
   
         3、final
               - 用final修饰的类不能够被继承。
               - 被final修饰的成员方法不能够被重xie。

        4、static
              - static 关键词用于修饰成员属性和成员方法
              - 被static修饰的成员属性和成员方法保存静态内存区。
              - 被static修饰的成员属性和成员方法的访问
                 在类外：
                  类名称::成员属性
                  类名称::成员方法()
                 在类里
                  self::成员属性
                  self::成员方法()
              - 在静态化的成员方法中不能访问非静态化的成员方法和成员属性。（在静态化的成员方法中不能出现$this）
              - 节省内存空间。访问方便。

         5、__clone
               - 魔术方法__clone在应用关键词clone时会被自动触发。
               - 用途：给成员属性赋初值


              生产模式：
              单例模式
               1、保证类仅仅被实例化一次。 内存空间仅仅被分配一次。节省内存空间。
               2、应用：数据库类(MySQL)实例化。
                               NoSQL-redis（键值对）（内存）类 
               3、单例模式定义

                














  习题：
1、定义Mobile类，在Mobile类中声明常量MODEL赋初值="a1",在类外访问常量。
2、定义Mobile类，在Mobile类中声明静态化的成员方法。showModel。在showModel输出“我的型号是a1”，在类外访问静态化的成员方法。





























